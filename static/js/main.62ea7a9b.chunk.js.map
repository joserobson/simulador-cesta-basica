{"version":3,"sources":["App.js","serviceWorker.js","popup.js","index.js"],"names":["produtos","id","content","ehCestaBasica","img","reorder","list","startIndex","endIndex","result","Array","from","splice","removed","move","source","destination","droppableSource","droppableDestination","sourceClone","destClone","index","droppableId","popupboxConfig","titleBar","enable","text","fadeIn","fadeInSpeed","App","state","items","selected","backgroundImage","iniciarJogo","totalDePontos","segundos","minutos","tempoEsgotado","id2List","droppable","droppable2","getList","onDragEnd","setState","produto","openPopupbox","toUpperCase","length","jogar","reiniciarJogo","mensagem","className","PopupboxManager","open","this","_interval","setInterval","linhas","colunas","element","push","style","textAlign","paddingTop","float","width","src","onClick","provided","snapshot","ref","innerRef","isDraggingOver","background","padding","height","map","itemLinha","indexLinha","itemColuna","key","draggableId","draggableProps","dragHandleProps","isDragging","draggableStyle","userSelect","grid","margin","placeholder","marginTop","item","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+VAeMA,G,MAAW,CACf,CAAEC,GAAI,IAAKC,QAAS,YAAUC,eAAe,EAAMC,IAAK,cACxD,CAAEH,GAAI,IAAKC,QAAS,QAASC,eAAe,EAAMC,IAAK,aACvD,CAAEH,GAAI,IAAKC,QAAS,MAAOC,eAAe,EAAMC,IAAK,WACrD,CAAEH,GAAI,IAAKC,QAAS,eAAUC,eAAe,EAAMC,IAAK,cACxD,CAAEH,GAAI,IAAKC,QAAS,cAAYC,eAAe,EAAMC,IAAK,gBAC1D,CACEH,GAAI,IACJC,QAAS,kBACTC,eAAe,EACfC,IAAK,mBAEP,CAAEH,GAAI,IAAKC,QAAS,UAAQC,eAAe,EAAMC,IAAK,YACtD,CAAEH,GAAI,IAAKC,QAAS,UAAQC,eAAe,EAAMC,IAAK,YACtD,CAAEH,GAAI,IAAKC,QAAS,UAAQC,eAAe,EAAMC,IAAK,YACtD,CAAEH,GAAI,KAAMC,QAAS,UAAWC,eAAe,EAAMC,IAAK,eAC1D,CAAEH,GAAI,KAAMC,QAAS,SAAUC,eAAe,EAAOC,IAAK,cAC1D,CACEH,GAAI,KACJC,QAAS,eACTC,eAAe,EACfC,IAAK,oBAEP,CAAEH,GAAI,KAAMC,QAAS,UAAWC,eAAe,EAAOC,IAAK,eAC3D,CACEH,GAAI,KACJC,QAAS,YACTC,eAAe,EACfC,IAAK,iBAEP,CAAEH,GAAI,KAAMC,QAAS,SAAUC,eAAe,EAAOC,IAAK,gBAItDC,EAAU,SAACC,EAAMC,EAAYC,GACjC,IAAMC,EAASC,MAAMC,KAAKL,GADoB,EAE5BG,EAAOG,OAAOL,EAAY,GAArCM,EAFuC,oBAK9C,OAFAJ,EAAOG,OAAOJ,EAAU,EAAGK,GAEpBJ,GAGHK,EAAO,SAACC,EAAQC,EAAaC,EAAiBC,GAClD,IAAMC,EAAcT,MAAMC,KAAKI,GACzBK,EAAYV,MAAMC,KAAKK,GAF8C,EAGzDG,EAAYP,OAAOK,EAAgBI,MAAO,GAArDR,EAHoE,oBAK3EO,EAAUR,OAAOM,EAAqBG,MAAO,EAAGR,GAEhD,IAAMJ,EAAS,GAIf,OAHAA,EAAOQ,EAAgBK,aAAeH,EACtCV,EAAOS,EAAqBI,aAAeF,EAEpCX,GAmDHc,EAAiB,CACrBC,SAAU,CACRC,QAAQ,EACRC,KAAM,iBAERC,QAAQ,EACRC,YAAa,KAuTAC,E,4MA/SbC,MAAQ,CACNC,MAAO/B,EACPgC,SAAU,GACVC,gBAAiB,sBACjBC,aAAa,EACbC,cAAe,EACfC,SAXwB,GAYxBC,QAXuB,EAYvBC,eAAc,G,EAahBC,QAAU,CACRC,UAAW,QACXC,WAAY,Y,EAGdC,QAAU,SAACzC,GAAD,OAAQ,EAAK6B,MAAM,EAAKS,QAAQtC,K,EAE1C0C,UAAY,SAAClC,GAAY,IACfM,EAAwBN,EAAxBM,OAAQC,EAAgBP,EAAhBO,YAEhB,GAA2B,eAAvBD,EAAOO,aAKNN,EAIL,GAAID,EAAOO,cAAgBN,EAAYM,YAAa,CAClD,IAAMS,EAAQ1B,EACZ,EAAKqC,QAAQ3B,EAAOO,aACpBP,EAAOM,MACPL,EAAYK,OAGVS,EAAQ,CAAEC,SAEa,eAAvBhB,EAAOO,cACTQ,EAAQ,CAAEE,SAAUD,IAGtB,EAAKa,SAASd,OACT,CACL,IAAIe,EAAU,EAAKH,QAAQ3B,EAAOO,aAAaP,EAAOM,OACtD,IAAKwB,EAAQ1C,cAWX,OAVA,EAAK2C,aACH,aACED,EAAQ3C,QAAQ6C,cAChB,+CAGJ,EAAKH,SAAS,CACZT,cAAe,EAAKL,MAAMK,cAAgB,IAO9C,IAAM1B,EAASK,EACb,EAAK4B,QAAQ3B,EAAOO,aACpB,EAAKoB,QAAQ1B,EAAYM,aACzBP,EACAC,GAGEZ,EAAG,yBAAqB,EAAKsC,QAAQ1B,EAAYM,aAAa0B,OAAS,EAApE,eAEHV,GAAgB,EACa,KAA7B7B,EAAOgC,WAAWO,SACpBV,GAAgB,GAGlB,EAAKM,SAAS,CACZb,MAAOtB,EAAO+B,UACdR,SAAUvB,EAAOgC,WACjBR,gBAAiB7B,EACjB+B,cAAe,EAAKL,MAAMK,cAAgB,EAC1CG,cAAeA,M,EAKrBW,MAAO,WAEL,EAAKL,SAAS,CACZV,aAAa,K,EAIjBgB,cAAe,WAEb,EAAKN,SAAS,CACZX,gBAAiB,sBACjBC,aAAa,EACbC,cAAe,EACfC,SAjHsB,GAkHtBC,QAjHqB,EAkHrBC,eAAc,EACdP,MAAO/B,EACPgC,SAAU,M,2DApGDmB,GACX,IAAMjD,EACJ,6BACE,0BAAMkD,UAAU,eAAeD,IAGnCE,kBAAgBC,KAAK,CAAEpD,c,0CAkGL,IAAD,OAGjBqD,KAAKC,UAAYC,aAAY,WAE3B,GAAI,EAAK3B,MAAMM,UAAY,GAAK,EAAKN,MAAMO,SAAW,IAAgC,IAA3B,EAAKP,MAAMI,YACtE,CACE,IAAIE,EAAW,EAAKN,MAAMM,SAAW,EACjCC,EAAU,EAAKP,MAAMO,QACR,IAAbD,GAAkBC,EAAU,IAE9BA,GAAoB,EACpBD,EAAW,IAGTA,EAAW,EACb,EAAKQ,SAAS,CACZR,SAAU,EACVC,QAAS,EACTC,eAAc,IAIhB,EAAKM,SAAS,CACZR,SAAUA,EACVC,QAASA,OAKd,O,+BASH,IANQ,IAAD,OAIHqB,EAAS,GACTC,EAAU,GACLtC,EAAQ,EAAGA,EAAQkC,KAAKzB,MAAMC,MAAMiB,OAAQ3B,IAAS,CAC5D,IAAMuC,EAAUL,KAAKzB,MAAMC,MAAMV,GALb,IAOhBsC,EAAQX,SACVU,EAAOG,KAAKF,GACZA,EAAU,IAGZA,EAAQE,KAAKD,GAIf,OAFAF,EAAOG,KAAKF,GAGV,6BACE,kBAAC,oBAAsBpC,IAEpBgC,KAAKzB,MAAMI,cAAgBqB,KAAKzB,MAAMQ,eACvC,yBAAKrC,GAAG,eAAe6D,MAAO,CAACC,UAAU,SAAUC,WAAW,SAC5D,6DACA,4GACA,6CACA,yBAAKF,MAAO,CAACG,MAAM,OAAQC,MAAM,QAC/B,yBAAKC,IAAI,oCAEX,yBAAKL,MAAO,CAACG,MAAM,QAASC,MAAM,MAAOF,WAAW,UAChD,4BAAQZ,UAAU,WAAWgB,QAASb,KAAKN,OAA3C,WAMPM,KAAKzB,MAAMQ,eACV,yBAAKrC,GAAG,gBAAgB6D,MAAO,CAACC,UAAU,WAC1C,2CACA,yBAAKD,MAAO,CAACG,MAAM,OAAQC,MAAM,QAC7B,yBAAKC,IAAI,oCAEb,yBAAKL,MAAO,CAACG,MAAM,QAASC,MAAM,MAAOF,WAAW,UAClD,2CAAcT,KAAKzB,MAAMK,cAAzB,YAEF,4BAAQiB,UAAU,WAAWgB,QAASb,KAAKL,eAA3C,oBAKDK,KAAKzB,MAAMI,cAAgBqB,KAAKzB,MAAMQ,eACvC,yBAAKrC,GAAG,QACN,yBAAK6D,MAAO,CAAEC,UAAW,SAAUG,MAAO,MAAOD,MAAM,SACrD,4GAGF,yBAAKH,MAAO,CAAEC,UAAW,SAASG,MAAO,MAAOD,MAAM,UACtD,wCAAcV,KAAKzB,MAAMO,QAAzB,IAAoCkB,KAAKzB,MAAMM,SAAW,GAAK,IAAKmB,KAAKzB,MAAMM,SAAUmB,KAAKzB,MAAMM,SAApG,MAGA,kBAAC,IAAD,CAAiBO,UAAWY,KAAKZ,WAC/B,kBAAC,IAAD,CAAWrB,YAAY,cACpB,SAAC+C,EAAUC,GAAX,OACC,yBACEC,IAAKF,EAASG,SACdV,OArRIW,EAqRgBH,EAASG,eArRTR,EAqRyB,OArRd,CAC/CS,WAAYD,EAAiB,YAAc,YAC3CE,QAnEW,EAoEXT,MAAO,MACPD,MAAOA,EACPW,OAAQ,WAkRQ,2BAAOd,MAAO,CAAEI,MAAO,SACrB,+BACGR,EAAOmB,KAAI,SAACC,EAAWC,GAAZ,OACV,4BACGD,EAAUD,KAAI,SAACG,EAAY3D,GAAb,OACb,wBAAIpB,GAAI+E,EAAW/E,IACjB,kBAAC,IAAD,CACEgF,IAAKD,EAAW/E,GAChBiF,YAAaF,EAAW/E,GACxBoB,MA3EN,EA2Ea0D,EAA6B1D,IAEnC,SAACgD,EAAUC,GAAX,OACC,uCACElB,UAAU,UACVmB,IAAKF,EAASG,UACVH,EAASc,eACTd,EAASe,gBAJf,CAKEtB,OArRduB,EAsRgBf,EAASe,WAtRbC,EAuRIjB,EAASc,eAAerB,MAvRzC,aAEnByB,WAAY,OACZZ,QAASa,EACTC,OAAO,OAAD,OAxFK,EAwFL,QAGNf,WAAYW,EAAa,aAAe,QAIrCC,MAgR+B,0BAAMlC,UAAU,eACb4B,EAAW9E,SAEd,yBAAKiE,IAAG,kBAAaa,EAAW5E,QA9R/C,IAACiF,EAAYC,KAkSHjB,EAASqB,uBArTnB,IAACjB,EAAgBR,KA+T1B,kBAAC,IAAD,CAAW3C,YAAY,eACpB,SAAC+C,EAAUC,GAAX,OACC,yBACEC,IAAKF,EAASG,SACdV,OACEQ,EAASG,eA5TiBR,EA6T1B,QA7TiC7D,EA8TjC,EAAK0B,MAAMG,gBA9T+B,CAE5D0C,QA3EW,EA4EXT,MAAO,MACPD,MAAOA,EACPW,OAAQ,QAER3C,gBAAgB,eAAD,OAAiB7B,EAAjB,KACfuF,UAAW,UA4TM,EAAK7D,MAAME,SAAS6C,KAAI,SAACe,EAAMvE,GAAP,OACvB,kBAAC,IAAD,CACE4D,IAAKW,EAAK3F,GACViF,YAAaU,EAAK3F,GAClBoB,MAAOA,IAEN,SAACgD,EAAUC,GAAX,OACC,uCACEC,IAAKF,EAASG,UACVH,EAASc,eACTd,EAASe,gBAHf,CAIEtB,OACEQ,EAASe,WAvTKC,EAwTdjB,EAASc,eAAerB,MAxTvB,aAE3ByB,WAAY,OACZZ,QAASa,EACTC,OAAO,OAAD,OAtGK,EAsGL,QACNb,OAAQ,QAOLU,MA+SqB,4BAAKM,EAAK1F,UA3TP,IAAaoF,QAgUvBjB,EAASqB,aAzVC,IAAiBzB,EAAO7D,Y,GAoDnCyF,aCvHEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCfcL,YCIpBM,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SFwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.62ea7a9b.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { PopupboxManager, PopupboxContainer } from \"react-popupbox\";\r\nimport \"react-popupbox/dist/react-popupbox.css\";\r\n\r\nconst grid = 2;\r\n\r\n// fake data generator\r\nconst getItems = (count, offset = 0) =>\r\n  Array.from({ length: count }, (v, k) => k).map((k) => ({\r\n    id: `item-${k + offset}`,\r\n    content: `item ${k + offset}`,\r\n  }));\r\n\r\nconst produtos = [\r\n  { id: \"1\", content: \"Feijão\", ehCestaBasica: true, img: \"feijao.png\" },\r\n  { id: \"2\", content: \"Arroz\", ehCestaBasica: true, img: \"arroz.png\" },\r\n  { id: \"3\", content: \"Sal\", ehCestaBasica: true, img: \"sal.png\" },\r\n  { id: \"4\", content: \"Açúcar\", ehCestaBasica: true, img: \"acucar.png\" },\r\n  { id: \"5\", content: \"Macarrão\", ehCestaBasica: true, img: \"macarrao.png\" },\r\n  {\r\n    id: \"6\",\r\n    content: \"Massa de Tomate\",\r\n    ehCestaBasica: true,\r\n    img: \"massaTomate.png\",\r\n  },\r\n  { id: \"7\", content: \"Óleo\", ehCestaBasica: true, img: \"oleo.png\" },\r\n  { id: \"8\", content: \"Café\", ehCestaBasica: true, img: \"cafe.png\" },\r\n  { id: \"9\", content: \"Fubá\", ehCestaBasica: true, img: \"fuba.png\" },\r\n  { id: \"10\", content: \"Bolacha\", ehCestaBasica: true, img: \"bolacha.png\" },\r\n  { id: \"11\", content: \"Bombom\", ehCestaBasica: false, img: \"bombom.png\" },\r\n  {\r\n    id: \"12\",\r\n    content: \"Refrigerante\",\r\n    ehCestaBasica: false,\r\n    img: \"refrigerante.png\",\r\n  },\r\n  { id: \"13\", content: \"Shampoo\", ehCestaBasica: false, img: \"shampoo.png\" },\r\n  {\r\n    id: \"14\",\r\n    content: \"Amaciante\",\r\n    ehCestaBasica: false,\r\n    img: \"amaciante.png\",\r\n  },\r\n  { id: \"15\", content: \"Danone\", ehCestaBasica: false, img: \"danone.png\" },\r\n];\r\n\r\n// a little function to help us with reordering the result\r\nconst reorder = (list, startIndex, endIndex) => {\r\n  const result = Array.from(list);\r\n  const [removed] = result.splice(startIndex, 1);\r\n  result.splice(endIndex, 0, removed);\r\n\r\n  return result;\r\n};\r\n\r\nconst move = (source, destination, droppableSource, droppableDestination) => {\r\n  const sourceClone = Array.from(source);\r\n  const destClone = Array.from(destination);\r\n  const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n\r\n  destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n  const result = {};\r\n  result[droppableSource.droppableId] = sourceClone;\r\n  result[droppableDestination.droppableId] = destClone;\r\n\r\n  return result;\r\n};\r\n\r\nconst getListStyle = (isDraggingOver, float) => ({\r\n  background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: \"60%\",\r\n  float: float,\r\n  height: \"480px\",\r\n});\r\n\r\nconst getCarrinhoListStyle = (isDraggingOver, float, img) => ({\r\n  //background: isDraggingOver ? \"lightblue\" : \"lightgrey\",\r\n  padding: grid,\r\n  width: \"38%\",\r\n  float: float,\r\n  height: \"430px\",\r\n  //backgroundImage:'url(../imgs/carrinhoCompras.png)',\r\n  backgroundImage: `url(../imgs/${img})`,\r\n  marginTop: \"30px\",\r\n});\r\n\r\nconst getItemStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n\r\n  // change background colour if dragging\r\n  background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  // backgroundImage:'url(../imgs/arroz.png)',\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n});\r\n\r\nconst getItemCarrinhoStyle = (isDragging, draggableStyle) => ({\r\n  // some basic styles to make the items look a bit nicer\r\n  userSelect: \"none\",\r\n  padding: grid * 2,\r\n  margin: `0 0 ${grid}px 0`,\r\n  height: '30px',\r\n\r\n  // change background colour if dragging\r\n  //background: isDragging ? \"lightgreen\" : \"grey\",\r\n\r\n  //backgroundImage:'url(../imgs/carrinhoCompras.png)',\r\n  // styles we need to apply on draggables\r\n  ...draggableStyle,\r\n});\r\n\r\nconst popupboxConfig = {\r\n  titleBar: {\r\n    enable: true,\r\n    text: \"ATENÇÃO\",\r\n  },\r\n  fadeIn: true,\r\n  fadeInSpeed: 500,\r\n};\r\n\r\nconst tempoDeJogoSegundos = 60;\r\nconst tempoDeJogoMinutos = 2;\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    items: produtos,\r\n    selected: [],\r\n    backgroundImage: \"carrinhoCompras.png\",\r\n    iniciarJogo: false,\r\n    totalDePontos: 0,\r\n    segundos:tempoDeJogoSegundos,\r\n    minutos:tempoDeJogoMinutos,\r\n    tempoEsgotado:false\r\n  };\r\n  \r\n\r\n  openPopupbox(mensagem) {\r\n    const content = (\r\n      <div>\r\n        <span className=\"quotes-from\">{mensagem}</span>\r\n      </div>\r\n    );\r\n    PopupboxManager.open({ content });\r\n  }\r\n\r\n  id2List = {\r\n    droppable: \"items\",\r\n    droppable2: \"selected\",\r\n  };\r\n\r\n  getList = (id) => this.state[this.id2List[id]];\r\n\r\n  onDragEnd = (result) => {\r\n    const { source, destination } = result;\r\n\r\n    if (source.droppableId === \"droppable2\") {\r\n      return;\r\n    }\r\n\r\n    // dropped outside the list\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (source.droppableId === destination.droppableId) {\r\n      const items = reorder(\r\n        this.getList(source.droppableId),\r\n        source.index,\r\n        destination.index\r\n      );\r\n\r\n      let state = { items };\r\n\r\n      if (source.droppableId === \"droppable2\") {\r\n        state = { selected: items };\r\n      }\r\n\r\n      this.setState(state);\r\n    } else {\r\n      var produto = this.getList(source.droppableId)[source.index];\r\n      if (!produto.ehCestaBasica) {\r\n        this.openPopupbox(\r\n          \"O PRODUTO \" +\r\n            produto.content.toUpperCase() +\r\n            \" NÃO PERTENCE À CESTA BÁSICA!\"\r\n        );\r\n\r\n        this.setState({\r\n          totalDePontos: this.state.totalDePontos - 5\r\n        });\r\n\r\n        return;\r\n      }\r\n\r\n\r\n      const result = move(\r\n        this.getList(source.droppableId),\r\n        this.getList(destination.droppableId),\r\n        source,\r\n        destination\r\n      );\r\n\r\n      let img = `carrinhoCompras${this.getList(destination.droppableId).length + 1}Produto.png`;\r\n\r\n      let tempoEsgotado = false;\r\n      if (result.droppable2.length === 10){\r\n        tempoEsgotado = true;\r\n      }  \r\n\r\n      this.setState({\r\n        items: result.droppable,\r\n        selected: result.droppable2,\r\n        backgroundImage: img,\r\n        totalDePontos: this.state.totalDePontos + 5,\r\n        tempoEsgotado: tempoEsgotado\r\n      });\r\n    }\r\n  };\r\n\r\n  jogar =() =>{\r\n   \r\n    this.setState({\r\n      iniciarJogo: true\r\n    });\r\n  }\r\n\r\n  reiniciarJogo =() =>{\r\n   \r\n    this.setState({\r\n      backgroundImage: \"carrinhoCompras.png\",\r\n      iniciarJogo: true,\r\n      totalDePontos: 0,\r\n      segundos:tempoDeJogoSegundos,\r\n      minutos:tempoDeJogoMinutos,\r\n      tempoEsgotado:false,\r\n      items: produtos,\r\n      selected: []\r\n    });\r\n  }\r\n\r\n  componentDidMount(){\r\n\r\n\r\n    this._interval = setInterval(() => {\r\n                \r\n      if (this.state.segundos >= 0 && this.state.minutos >= 0 && this.state.iniciarJogo === true)\r\n      {\r\n        let segundos = this.state.segundos - 1;\r\n        let minutos = this.state.minutos;\r\n        if (segundos === 0 && minutos > 0)\r\n        {\r\n          minutos = minutos - 1;\r\n          segundos = 59;\r\n        }\r\n\r\n        if (segundos < 0 ){\r\n          this.setState({\r\n            segundos: 0,\r\n            minutos: 0,\r\n            tempoEsgotado:true\r\n          });\r\n\r\n        }else{\r\n          this.setState({\r\n            segundos: segundos,\r\n            minutos: minutos\r\n          });\r\n        }\r\n      }\r\n\r\n    }, 1000);\r\n  }\r\n\r\n  render() {    \r\n\r\n    const numeroColunas = 5;\r\n\r\n    let linhas = [];\r\n    let colunas = [];\r\n    for (let index = 0; index < this.state.items.length; index++) {\r\n      const element = this.state.items[index];\r\n\r\n      if (colunas.length === numeroColunas) {\r\n        linhas.push(colunas);\r\n        colunas = [];\r\n      }\r\n\r\n      colunas.push(element);\r\n    }\r\n    linhas.push(colunas);\r\n\r\n    return (\r\n      <div>\r\n        <PopupboxContainer {...popupboxConfig} />\r\n\r\n        { !this.state.iniciarJogo && !this.state.tempoEsgotado &&\r\n          <div id=\"prepararJogo\" style={{textAlign:\"center\", paddingTop:'10px'}}>\r\n            <h1>PREPARADO(A) PARA AS COMPRAS?</h1>            \r\n            <h2>VOCÊ TEM 2 MINUTOS PRA SELECIONAR SOMENTE OS PRODUTOS DA CESTA BÁSICA.</h2>            \r\n            <h1>BOAS COMPRAS!</h1>\r\n            <div style={{float:\"left\", width:\"50%\"}}>\r\n              <img src=\"../imgs/fundoPaginaInicial.png\"></img>\r\n            </div>\r\n            <div style={{float:\"right\", width:\"50%\", paddingTop:'100px'}}>\r\n                <button className=\"btnJogar\" onClick={this.jogar}>Jogar</button>  \r\n            </div>\r\n            \r\n          </div>\r\n        }\r\n\r\n        {this.state.tempoEsgotado &&\r\n          <div id=\"resultadoJogo\" style={{textAlign:\"center\"}}>\r\n          <h2>FIM DE JOGO</h2> \r\n          <div style={{float:\"left\", width:\"50%\"}}>\r\n              <img src=\"../imgs/fundoPaginaInicial.png\"></img>\r\n          </div>\r\n          <div style={{float:\"right\", width:\"50%\", paddingTop:\"100px\"}}>         \r\n            <h2>VOCÊ FEZ {this.state.totalDePontos} PONTOS</h2>          \r\n          </div>\r\n          <button className=\"btnJogar\" onClick={this.reiniciarJogo}>Jogar Novamente</button>\r\n        </div>        \r\n        }\r\n\r\n\r\n        {this.state.iniciarJogo && !this.state.tempoEsgotado &&\r\n        <div id=\"jogo\">\r\n          <div style={{ textAlign: \"center\", width: '60%', float:\"left\" }}>\r\n            <h2>Selecione e arraste os produtos da cesta básica para dentro do carrinho.</h2>            \r\n          </div>          \r\n\r\n          <div style={{ textAlign: \"center\",width: '38%', float:\"right\" }}>\r\n          <h2> Tempo: 0{this.state.minutos}:{ this.state.segundos < 10 ? '0'+ this.state.segundos: this.state.segundos} </h2>            \r\n          </div>\r\n\r\n          <DragDropContext onDragEnd={this.onDragEnd}>\r\n            <Droppable droppableId=\"droppable\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getListStyle(snapshot.isDraggingOver, \"left\")}\r\n                >\r\n                  <table style={{ width: \"100%\" }}>\r\n                    <tbody>\r\n                      {linhas.map((itemLinha, indexLinha) => (\r\n                        <tr>\r\n                          {itemLinha.map((itemColuna, index) => (\r\n                            <td id={itemColuna.id}>\r\n                              <Draggable\r\n                                key={itemColuna.id}\r\n                                draggableId={itemColuna.id}\r\n                                index={indexLinha * numeroColunas + index}\r\n                              >\r\n                                {(provided, snapshot) => (\r\n                                  <div\r\n                                    className=\"tooltip\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}\r\n                                    style={getItemStyle(\r\n                                      snapshot.isDragging,\r\n                                      provided.draggableProps.style\r\n                                    )}\r\n                                  >\r\n                                    {/* {itemColuna.content} */}\r\n                                    <span className=\"tooltiptext\">\r\n                                      {itemColuna.content}\r\n                                    </span>\r\n                                    <img src={`../imgs/${itemColuna.img}`} />\r\n                                  </div>\r\n                                )}\r\n                              </Draggable>\r\n                              {provided.placeholder}\r\n                            </td>\r\n                          ))}\r\n                        </tr>\r\n                      ))}\r\n                    </tbody>\r\n                  </table>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <Droppable droppableId=\"droppable2\">\r\n              {(provided, snapshot) => (\r\n                <div\r\n                  ref={provided.innerRef}\r\n                  style={getCarrinhoListStyle(\r\n                    snapshot.isDraggingOver,\r\n                    \"right\",\r\n                    this.state.backgroundImage\r\n                  )}\r\n                >\r\n                  {/* <div style={{ textAlign: \"center\" }}>\r\n                  <h2>Carrinho de Compras</h2>\r\n                </div> */}\r\n                  {this.state.selected.map((item, index) => (\r\n                    <Draggable\r\n                      key={item.id}\r\n                      draggableId={item.id}\r\n                      index={index}\r\n                    >\r\n                      {(provided, snapshot) => (\r\n                        <div\r\n                          ref={provided.innerRef}\r\n                          {...provided.draggableProps}\r\n                          {...provided.dragHandleProps}\r\n                          style={getItemCarrinhoStyle(\r\n                            snapshot.isDragging,\r\n                            provided.draggableProps.style\r\n                          )}\r\n                        >                          \r\n                          <h3>{item.content}</h3>\r\n                        </div>\r\n                      )}\r\n                    </Draggable>\r\n                  ))}\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n      }\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport './popup.css'\r\n\r\nclass Popup extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\", paddingTop:'20px'}}>    \r\n                <div className=\"popup\">                            \r\n                    <span className=\"popuptext show\" id=\"myPopup\">A Simple Popup!</span>\r\n                </div>                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Popup","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Popup from './popup';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>        \r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}